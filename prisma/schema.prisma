generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

model User {
  id                  String        @id @default(uuid())
  name                String
  username            String        @unique
  email               String        @unique
  password            String
  profileImage        String?
  role                UserRole      @default(ADMIN)
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
  isDeleted           Boolean       @default(false)

  @@map("users")
}


model Project {
  id                  String        @id @default(uuid())
  title               String
  category            String
  description         String
  image               String
  link                String
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
  isDeleted           Boolean       @default(false)

  @@map("projects")
}
model Article {
  id                  String        @id @default(uuid())
  title               String
  image               String
  description         String
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
  isDeleted           Boolean       @default(false)

  @@map("articles")
}
model Skill {
  id                  String        @id @default(uuid())
  icon                String
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
  isDeleted           Boolean       @default(false)

  @@map("skills")
}
model Experience {
  id                  String        @id @default(uuid())
  company     String
  position    String
  description String
  location    String?
  startDate   DateTime
  endDate     DateTime?
  isCurrent   Boolean  @default(false)
  technologies String[] // List of tech keywords or stacks
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
  isDeleted           Boolean       @default(false)

  @@map("experiences")
}
model Achievement {
  id          String   @id @default(uuid())
  title       String
  subtitle    String?       // Optional: e.g., "Google Certified"
  description String?       // Optional detailed text
  date        DateTime      // When the achievement was earned
  image       String?       // Optional image URL (e.g., certificate or award image)
  link        String?       // Optional: external URL or certificate link
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isDeleted   Boolean  @default(false)

  @@map("achievements")
}
model Testimonial {
  id                  String        @id @default(uuid())
  name       String
  role       String
  company    String
  location   String
  image      String?
  message    String
  rating     Int    //min(1) to max(5)  
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
  isDeleted           Boolean       @default(false)

  @@map("testimonials")
}

enum UserRole {
  ADMIN
}
